cmake_minimum_required(VERSION 3.0)
get_filename_component(Id ${CMAKE_CURRENT_SOURCE_DIR} NAME)
project(${Id} CXX)
add_definitions(-DPROJECT_NAME="${Id}")
add_definitions(-DPROJECT_VERSION="1.0.0")
set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS)
set(CMAKE_CXX_FLAGS "-std=c++11 -Wall -Wextra -Wpedantic")
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -ggdb3 -fsanitize=undefined -fsanitize=address")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -O3 -fno-asynchronous-unwind-tables -fno-exceptions -fno-rtti -fno-ident")
set(CMAKE_EXE_LINKER_FLAGS_RELEASE "-Wl,--gc-sections,--strip-all,--build-id=none")
if (NOT CMAKE_BUILD_TYPE)
   set(CMAKE_BUILD_TYPE Release)
endif()
file(GLOB SERVER_HEADERS src/server/*.hpp)
file(GLOB SERVER_SOURCES src/server/*.cpp)
add_executable(${Id} ${SERVER_HEADERS} ${SERVER_SOURCES})
file(GLOB HELPER_HEADERS src/helper/*.hpp)
file(GLOB HELPER_SOURCES src/helper/*.cpp)
add_executable("helper" ${HELPER_HEADERS} ${HELPER_SOURCES})
install(CODE "execute_process(COMMAND useradd ${Id})")
install(TARGETS ${Id} RUNTIME DESTINATION /usr/bin)
install(TARGETS "helper" RUNTIME DESTINATION /usr/bin)
install(FILES sys/${Id}.conf DESTINATION /etc)
install(FILES sys/${Id}.service DESTINATION /etc/systemd/system/multi-user.target.wants)
install(DIRECTORY test/ DESTINATION /var/www/${Id})
install(CODE "execute_process(COMMAND chmod 6755 /usr/bin/helper)")
install(CODE "execute_process(COMMAND chmod --recursive 755 /var/www/${Id})")
install(CODE "execute_process(COMMAND chown --recursive ${Id}:${Id} /var/www/${Id})")
install(CODE "execute_process(COMMAND touch /var/log/${Id}.log)")
install(CODE "execute_process(COMMAND chown ${Id}:${Id} /var/log/${Id}.log)")
